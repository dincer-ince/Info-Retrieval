// <auto-generated />
using System;
using InfoRetrieval.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InfoRetrieval.Migrations
{
    [DbContext(typeof(documentsContext))]
    partial class documentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("InfoRetrieval.Models.Dictionary", b =>
                {
                    b.Property<int>("termId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<double>("df")
                        .HasColumnType("double precision");

                    b.Property<int[]>("docID")
                        .HasColumnType("integer[]");

                    b.Property<double[]>("tfPerDoc")
                        .HasColumnType("double precision[]");

                    b.HasKey("termId");

                    b.ToTable("Dictionary");
                });

            modelBuilder.Entity("InfoRetrieval.Models.Documents", b =>
                {
                    b.Property<int>("docID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("processedDocument")
                        .HasColumnType("text");

                    b.Property<string>("rawDocument")
                        .HasColumnType("text");

                    b.Property<string[]>("terms")
                        .HasColumnType("text[]");

                    b.HasKey("docID");

                    b.ToTable("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
